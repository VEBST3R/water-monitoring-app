const express = require('express');
const RED = require('node-red');
const http = require('http');
const path = require('path');

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Express app
const app = express();

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è HTTP —Å–µ—Ä–≤–µ—Ä–∞
const server = http.createServer(app);

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è Node-RED
const settings = {
    httpAdminRoot: '/admin',
    httpNodeRoot: '/api',
    userDir: __dirname,
    flowFile: path.join(__dirname, 'flows.json'),
    credentialSecret: 'water-monitoring-secret-key-2025',
    httpNodeCors: {
        origin: "*",
        methods: "GET,PUT,POST,DELETE",
        allowedHeaders: "Content-Type, Authorization"
    },
    logging: {
        console: {
            level: "info",
            metrics: false,
            audit: false
        }
    },
    editorTheme: {
        projects: {
            enabled: false
        }
    }
};

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Node-RED
RED.init(server, settings);

// –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –º–∞—Ä—à—Ä—É—Ç—ñ–≤
app.use(settings.httpAdminRoot, RED.httpAdmin);
app.use(settings.httpNodeRoot, RED.httpNode);

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = 1880;
server.listen(PORT, function() {
    console.log('üåä Water Monitoring Node-RED Server –∑–∞–ø—É—â–µ–Ω–∏–π!');
    console.log(`üìä Admin –ø–∞–Ω–µ–ª—å: http://localhost:${PORT}${settings.httpAdminRoot}`);
    console.log(`üîó API endpoints: http://localhost:${PORT}${settings.httpNodeRoot}`);
    console.log('üì± –î–æ—Å—Ç—É–ø–Ω—ñ API:');
    console.log(`   ‚Ä¢ GET  ${settings.httpNodeRoot}/getWQI?device=111001`);
    console.log(`   ‚Ä¢ GET  ${settings.httpNodeRoot}/getDeviceStatus?device=111001`);
    console.log(`   ‚Ä¢ POST ${settings.httpNodeRoot}/calibrateSensors?device=111001`);
    console.log(`   ‚Ä¢ GET  ${settings.httpNodeRoot}/listAvailableSensors`);
    console.log('');
    console.log('üí° –î–ª—è –∑—É–ø–∏–Ω–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C');
    
    // –ó–∞–ø—É—Å–∫ Node-RED runtime
    RED.start().then(() => {
        console.log('‚úÖ Node-RED flows –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ —Ç–∞ –∑–∞–ø—É—â–µ–Ω—ñ');
    }).catch(err => {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É Node-RED:', err);
    });
});
