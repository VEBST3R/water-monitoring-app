const fs = require('fs');

// –ß–∏—Ç–∞—î–º–æ flows.json
let flowsContent = fs.readFileSync('./flows.json', 'utf8');

console.log('üîç –®—É–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é generateDeviceData...');

// –ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ –∑–∞–º—ñ–Ω—é—î–º–æ return block –≤ generateDeviceData
const originalReturn = `return {
            ph: Math.max(0, Math.min(14, baseline.ph + phVariation + noise())),
            temp: Math.max(0, Math.min(40, baseline.temp + tempVariation + noise() * 2)),
            tds: Math.max(0, Math.min(2000, baseline.tds + tdsVariation + noise() * 10)),
            turbidity: Math.max(0, Math.min(50, baseline.turbidity + turbidityVariation + noise()))
        };`;

const newReturn = `// –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º –æ–∫—Ä—É–≥–ª–µ–Ω–Ω—è–º
        const ph = Math.max(0, Math.min(14, baseline.ph + phVariation + noise()));
        const temp = Math.max(0, Math.min(40, baseline.temp + tempVariation + noise() * 2));
        const tds = Math.max(0, Math.min(2000, baseline.tds + tdsVariation + noise() * 10));
        const turbidity = Math.max(0, Math.min(50, baseline.turbidity + turbidityVariation + noise()));
        
        return {
            ph: Math.round(ph * 100) / 100,              // 2 –∑–Ω–∞–∫–∏ –ø—ñ—Å–ª—è –∫–æ–º–∏
            temp: Math.round(temp * 10) / 10,            // 1 –∑–Ω–∞–∫ –ø—ñ—Å–ª—è –∫–æ–º–∏  
            tds: Math.round(tds),                        // —Ü—ñ–ª—ñ —á–∏—Å–ª–∞
            turbidity: Math.round(turbidity * 10) / 10   // 1 –∑–Ω–∞–∫ –ø—ñ—Å–ª—è –∫–æ–º–∏
        };`;

if (flowsContent.includes('baseline.ph + phVariation + noise()')) {
    flowsContent = flowsContent.replace(originalReturn, newReturn);
    
    // –ó–∞–ø–∏—Å—É—î–º–æ –Ω–∞–∑–∞–¥
    fs.writeFileSync('./flows.json', flowsContent);
    console.log('‚úÖ flows.json –æ–Ω–æ–≤–ª–µ–Ω–æ –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º –æ–∫—Ä—É–≥–ª–µ–Ω–Ω—è–º –∑–Ω–∞—á–µ–Ω—å');
} else {
    console.log('‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è');
    console.log('üîç –°–ø—Ä–æ–±—É—î–º–æ –∑–Ω–∞–π—Ç–∏ —ñ—Å–Ω—É—é—á—É —Ñ—É–Ω–∫—Ü—ñ—é...');
    
    // –°–ø—Ä–æ–±—É—î–º–æ –∑–Ω–∞–π—Ç–∏ –±—É–¥—å-—è–∫—É —á–∞—Å—Ç–∏–Ω—É —Ñ—É–Ω–∫—Ü—ñ—ó
    if (flowsContent.includes('generateDeviceData')) {
        console.log('‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ generateDeviceData —Ñ—É–Ω–∫—Ü—ñ—é');
    } else {
        console.log('‚ùå generateDeviceData —Ñ—É–Ω–∫—Ü—ñ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
    }
}
